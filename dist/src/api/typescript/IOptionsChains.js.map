{"version":3,"file":"IOptionsChains.js","sourceRoot":"","sources":["../../../../src/api/typescript/IOptionsChains.ts"],"names":[],"mappings":"","sourcesContent":["// - Copyright (c) Benjamin Vincent Kasapoglu (Luxcium). All rights reserved.\r\n// - Licensed under the MIT License.\r\n// - See License.txt in the project root for license information.\r\n\r\n// Level1OptionData: an!y; // Complex\r\n\r\n// export interface IOptionsQuote {\r\n//   underlying: string; // Underlying name\r\n//   underlyingId: number; // Underlying ID\r\n//   symbol: string; // Symbol name\r\n//   symbolId: number; // Symbol ID\r\n//   bidPrice: number; // Bid price\r\n//   bidSize: number; // Bid size\r\n//   askPrice: number; // Ask price\r\n//   askSize: number; // Ask size\r\n//   lastTradePriceTrHrs: number; // Last trade price trade hours\r\n//   lastTradePrice: number; // Last trade price\r\n//   lastTradeSize: number; // Last trade size\r\n//   lastTradeTick: string; // Last trade tick\r\n//   lastTradeTime: DateTime; // Last trade time\r\n//   volume: number; // Volume\r\n//   openPrice: number; // Open price\r\n//   highPrice: number; // High price\r\n//   lowPrice: number; // Low price\r\n//   volatility: number; // Volatility\r\n//   delta: number; // Delta\r\n//   gamma: number; // Gamma\r\n//   theta: number; // Theta\r\n//   vega: number; // Vega\r\n//   rho: number; // Rho\r\n//   openInterest: number; // Open interest\r\n//   delay: number; // How much is data delayed\r\n//   isHalted: boolean; // Whether or not the symbol was halted\r\n//   VWAP: number; // Volume Weighted Average Price\r\n// }\r\n\r\nexport interface IOptionChains {\r\n  optionChain: IOptionChain[];\r\n}\r\n\r\nexport interface IOptionChain {\r\n  expiryDate: string;\r\n  description: string;\r\n  listingExchange: string;\r\n  optionExerciseType: string;\r\n  chainPerRoot: IChainPerRoot[];\r\n}\r\n\r\nexport interface IChainPerRoot {\r\n  root: string;\r\n}\r\nexport interface IChainPerStrike {\r\n  strikePrice: number;\r\n  callSymbolId: number;\r\n  putSymbolId: number;\r\n}\r\nexport interface IChainPerStrikePrice {\r\n  chainPerStrike: IChainPerStrike[];\r\n  multiplier: number;\r\n  chainPerStrikePrice: IChainPerStrike[];\r\n}\r\n\r\n/*\r\nResponse properties\r\n\r\nProperty\tType\tDescription\r\nsymbols\r\nComplex\r\nList of ChainPerExpiryDate elements.\r\nChainPerExpiryDate\r\nComplex\r\n\r\nexpiryDate\r\nDateTime\r\nOption expiry date.\r\ndescription\r\nString\r\nDescription of the underlying option.\r\nlistingExchange\r\nEnumeration\r\nPrimary listing exchange.\r\nSee Listing Exchange section for the list of all listing exchanges.\r\noptionExerciseType\r\nEnumeration\r\nOption exercise style (e.g., \"American\").\r\nSee Option Exercise Type section for all allowed values.\r\nchainPerRoot\r\nComplex\r\nList of ChainPerRoot elements.\r\nChainPerRoot\r\nComplex\r\n\r\noptionRoot\r\nString\r\nOption root symbol.\r\nchainPerStrikePrice\r\nComplex\r\nList of ChainPerStrikePrice elements.\r\nChainPerStrikePrice\r\nComplex\r\n\r\nstrikePrice\r\nDouble\r\nOption strike price.\r\ncallSymbolId\r\nInteger\r\nInternal identifier of the call option symbol.\r\nputSymbolId\r\nInteger\r\nInternal identifier of the put option symbol.\r\n*/\r\n"]}