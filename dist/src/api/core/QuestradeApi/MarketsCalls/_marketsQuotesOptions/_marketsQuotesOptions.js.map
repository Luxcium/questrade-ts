{"version":3,"file":"_marketsQuotesOptions.js","sourceRoot":"","sources":["../../../../../../../src/api/core/QuestradeApi/MarketsCalls/_marketsQuotesOptions/_marketsQuotesOptions.ts"],"names":[],"mappings":";;;AAAA,0DAAsD;AACtD,gCAAyC;AAU5B,QAAA,sBAAsB,GAAG,CAAC,SAAsB,eAAK,EAAE,EAAE,CAAC,CACrE,WAAwB,EACxB,EAAE,CAAC,KAAK,EAAE,SAAmB,EAAE,EAAE,CACjC,gCAAwB,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAC3C,SAAS,EACT,KAAK,CAAC,EACN,KAAK,CAAC,EACN,IAAI,EACJ,CAAC,EACD,CAAC,CACF,CAAC;AAES,QAAA,uBAAuB,GAAG,CAAC,SAAsB,eAAK,EAAE,EAAE,CAAC,CACtE,WAAwB,EACxB,EAAE,CAAC,KAAK,EAAE,OAAiB,EAAE,EAAE;IAC/B,MAAM,EACJ,YAAY,EACZ,UAAU,EACV,UAAU,EACV,cAAc,EACd,cAAc,GACf,GAAG,OAAO,CAAC;IACZ,OAAO,gCAAwB,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAClD,IAAI,EACJ,YAAY,EACZ,UAAU,EACV,UAAU,EACV,cAAc,EACd,cAAc,CACf,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,wBAAwB,GAAG,CAAC,SAAsB,eAAK,EAAE,EAAE,CAAC,CACvE,WAAwB,EACxB,EAAE,CAAC,KAAK,EACR,YAAgD,EAAE,EAClD,YAAqB,EACrB,UAAmB,EACnB,aAAwC,KAAK,CAAC,EAC9C,iBAA4C,CAAC,EAC7C,iBAA4C,CAAC,EACpB,EAAE;IAC3B,IAAI;QACF,MAAM,QAAQ,GACZ,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC;YACjC,CAAC,CAAC;gBACE,SAAS;aACV;YACH,CAAC,CAAC;gBACE,OAAO,EAAE;oBACP;wBACE,YAAY;wBACZ,UAAU;wBACV,UAAU,EAAE,UAAU,IAAI,KAAK,CAAC;wBAChC,cAAc,EAAE,cAAc,IAAI,CAAC;wBACnC,cAAc,EAAE,cAAc,IAAI,CAAC;qBACpC;iBACF;aACF,CAAC;QAER,OAAO,iBAAa,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAkB,QAAQ,CAAC,CAElE,yBAAyB,CAAC,EAAE,CAAC;KAChC;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACxD,MAAM,KAAK,CAAC;KACb;AACH,CAAC,CAAC","sourcesContent":["import { AxiosStatic, default as axios } from 'axios';\nimport { _axiosApiPost } from '../../..';\nimport { IOptionsQuotes } from '../../../../typescript';\nimport { Credentials } from '../../../typescript';\nimport {\n  FiltersArray,\n  OptionsIdArray,\n  OptionsPostData,\n  _Filters,\n} from './typescript';\n\nexport const _getQuotesOptionsByIds = (_axios: AxiosStatic = axios) => (\n  credentials: Credentials\n) => async (optionIds: number[]) =>\n  _getMarketsQuotesOptions(_axios)(credentials)(\n    optionIds,\n    void 0,\n    void 0,\n    null,\n    0,\n    0\n  );\n\nexport const _getQuotesOptionsFilter = (_axios: AxiosStatic = axios) => (\n  credentials: Credentials\n) => async (filters: _Filters) => {\n  const {\n    underlyingId,\n    expiryDate,\n    optionType,\n    minstrikePrice,\n    maxstrikePrice,\n  } = filters;\n  return _getMarketsQuotesOptions(_axios)(credentials)(\n    null,\n    underlyingId,\n    expiryDate,\n    optionType,\n    minstrikePrice,\n    maxstrikePrice\n  );\n};\n\nexport const _getMarketsQuotesOptions = (_axios: AxiosStatic = axios) => (\n  credentials: Credentials\n) => async (\n  optionIds: void | null | undefined | number[] = [],\n  underlyingId?: number,\n  expiryDate?: string,\n  optionType: string | undefined | null = void 0,\n  minstrikePrice: number | undefined | null = 0,\n  maxstrikePrice: number | undefined | null = 0\n): Promise<IOptionsQuotes> => {\n  try {\n    const postData: OptionsIdArray | FiltersArray =\n      !!optionIds && optionIds.length > 0\n        ? {\n            optionIds,\n          }\n        : {\n            filters: [\n              {\n                underlyingId,\n                expiryDate,\n                optionType: optionType || void 0,\n                minstrikePrice: minstrikePrice || 0,\n                maxstrikePrice: maxstrikePrice || 0,\n              },\n            ],\n          };\n\n    return _axiosApiPost(_axios)(credentials)<OptionsPostData>(postData)<\n      IOptionsQuotes\n    >('/markets/quotes/options')();\n  } catch (error) {\n    console.error('/markets/quotes/options', error.message);\n    throw error;\n  }\n};\n"]}