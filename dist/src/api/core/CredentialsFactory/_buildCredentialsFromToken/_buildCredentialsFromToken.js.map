{"version":3,"file":"_buildCredentialsFromToken.js","sourceRoot":"","sources":["../../../../../../src/api/core/CredentialsFactory/_buildCredentialsFromToken/_buildCredentialsFromToken.ts"],"names":[],"mappings":";;AAAA,0BAAsC;AAGzB,QAAA,0BAA0B,GAAG,CAAC,KAA0B,EAAE,EAAE;IACvE,MAAM,WAAW,GAAG,oBAAgB,EAAE,CAAC;IAEvC,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,CAAC,KAAK,EAAE;QAC1C,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;KACzD;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1D,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;KAC7B;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1D,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;KAC/B;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC;QAC/C,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,QAAQ,CAAC;QAC9C,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC;QAClD,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;QAC1C,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;QAC9C,WAAW,CAAC,aAAa,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC;KACtD;IACD,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,QAAQ;QACxC,CAAC,CAAC,6BAA6B;QAC/B,CAAC,CAAC,6BAA6B,CAAC;IAElC,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import { emptyCredentials } from '..';\nimport { QuestradeAPIOptions } from '../../../typescript';\n\nexport const _buildCredentialsFromToken = (token: QuestradeAPIOptions) => {\n  const credentials = emptyCredentials();\n\n  if (typeof token === 'undefined' || !token) {\n    throw new Error('questrade_missing_api_key or options');\n  }\n  if (typeof token === 'string' && token.indexOf('/') !== -1) {\n    credentials.keyFile = token;\n  }\n  if (typeof token === 'string' && token.indexOf('/') === -1) {\n    credentials.seedToken = token;\n  }\n  if (typeof token === 'object') {\n    credentials.practice = !!token.practiceAccount;\n    credentials.keyDir = token.keyDir || './keys';\n    credentials.apiVersion = token.apiVersion || 'v1';\n    credentials.keyFile = token.keyFile || '';\n    credentials.seedToken = token.seedToken || '';\n    credentials.accountNumber = `${token.account}` || '';\n  }\n  credentials.authUrl = credentials.practice\n    ? 'https://practicelogin.q.com'\n    : 'https://login.questrade.com';\n\n  return credentials;\n};\n"]}